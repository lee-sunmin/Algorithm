2019 카카오 코딩테스트 마지막 문제 블록게임
튜닝 필요.

포인트 : <두 블럭 다> 위에 아무것도 없는지 확인해야 함.

====================================================

public class Main {
	static int idx = 0;
	static int size = 0;

	public static void main(String[] args) {
		int[][] board = { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
				{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 0, 0, 0, 4, 0, 0, 0 },
				{ 0, 0, 0, 0, 0, 4, 4, 0, 0, 0 }, { 0, 0, 0, 0, 3, 0, 4, 0, 0, 0 }, { 0, 0, 0, 2, 3, 0, 0, 0, 5, 5 },
				{ 1, 2, 2, 2, 3, 3, 0, 0, 0, 5 }, { 1, 1, 1, 0, 0, 0, 0, 0, 0, 5 } };

		System.out.println(solution(board));
	}

	public static int solution(int[][] board) {
		int answer = 0;
		int startLine = -1;
		size = board.length;
		for (int i = 0; i < size; i++) {
			for (int j = 0; j < size; j++) {
				if (board[i][j] != 0) {
					startLine = i;
					break;
				}
			}
			if (startLine > -1)
				break;
		}

		while (runLoop(startLine, board) == 1) {
			answer++;
		}

		return answer;
	}

	public static int runLoop(int startLine, int[][] board) {

		for (int i = startLine; i < size; i++) {
			for (int j = 0; j < size; j++) {
				if (board[i][j] == 0) {
					board[i][j] = -1;
					// print(board);
					if (check(board, i, j)) {
						return 1;
					}
					board[i][j] = 0;
				}
			}
		}
		return 0;
	}

	static boolean checkLine(int[][] board, int x, int y) {
		for (int i = x - 1; i >= 0; i--) {
			if (board[i][y] != 0)
				return true;
		}
		return false;
	}

	static boolean check(int[][] board, int x, int y) {
		if (checkLine(board, x, y))
			return false;

		// 1 right
		if (y < size - 2 && x < size - 1 && board[x][y + 2] != 0 && board[x][y + 1] == 0) {
			if (!checkLine(board, x, y + 1)) {
				int temp = board[x][y + 2];
				if (board[x + 1][y] == temp && board[x + 1][y + 1] == temp && board[x + 1][y + 2] == temp) {
					board[x][y] = 0;
					board[x][y + 1] = 0;
					board[x][y + 2] = 0;
					board[x + 1][y] = 0;
					board[x + 1][y + 1] = 0;
					board[x + 1][y + 2] = 0;
					return true;
				}
			}
		}
		// 2 left
		if (y > 0 && y < size - 1 && x < size - 1 && board[x][y - 1] != 0 && board[x][y + 1] == 0) {
			if (!checkLine(board, x, y + 1)) {
				int temp = board[x][y - 1];

				if (board[x + 1][y - 1] == temp && board[x + 1][y] == temp && board[x + 1][y + 1] == temp) {
					board[x][y] = 0;
					board[x][y + 1] = 0;
					board[x][y - 1] = 0;
					board[x + 1][y - 1] = 0;
					board[x + 1][y] = 0;
					board[x + 1][y + 1] = 0;
					return true;
				}
			}
		}
		// 3 right down
		if (x < size - 2 && y < size - 1 && board[x][y + 1] != 0 && board[x + 1][y + 1] != 0 && board[x + 1][y] == 0) {
			int temp = board[x][y + 1];
			if (board[x + 1][y + 1] == temp && board[x + 2][y + 1] == temp && board[x + 2][y] == temp) {
				board[x][y] = 0;
				board[x][y + 1] = 0;
				board[x + 1][y + 1] = 0;
				board[x + 2][y + 1] = 0;
				board[x + 2][y] = 0;
				board[x + 1][y + 1] = 0;
				return true;

			}
		}
		// 4 left down
		if (x < size - 2 && y > 0 && board[x][y - 1] != 0 && board[x + 1][y - 1] != 0 && board[x + 1][y] == 0) {
			int temp = board[x][y - 1];

			if (board[x + 1][y - 1] == temp && board[x + 2][y - 1] == temp && board[x + 2][y] == temp) {
				board[x][y] = 0;
				board[x][y - 1] = 0;
				board[x + 1][y - 1] = 0;
				board[x + 2][y - 1] = 0;
				board[x + 2][y] = 0;
				board[x + 1][y] = 0;
				return true;
			}
		}
		// 5 fu
		if (x < size - 1 && y < size - 2 && board[x][y + 1] != 0 && board[x][y + 2] == 0) {
			if (!checkLine(board, x, y + 2)) {
				int temp = board[x][y + 1];
				if (board[x + 1][y] == temp && board[x + 1][y + 1] == temp && board[x + 1][y + 2] == temp) {
					board[x][y] = 0;
					board[x][y + 1] = 0;
					board[x][y + 2] = 0;
					board[x + 1][y] = 0;
					board[x + 1][y + 1] = 0;
					board[x + 1][y + 2] = 0;
					return true;
				}
			}
		}
		return false;
	}

	public static void print(int[][] board) {
		for (int i = 0; i < board.length; i++) {
			for (int j = 0; j < board[0].length; j++) {
				System.out.print(board[i][j] + " ");
			}
			System.out.println();
		}

		System.out.println();
		System.out.println();
		System.out.println();
	}
}
