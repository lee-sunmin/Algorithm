충격과 공포의 문제.
메모리 초과, 시간초과
point : 선언과 초기화는 다르다.


변경 : 내 스타일로 다시 풀어봄 :)
=============================

import java.util.*;

public class Main {
	static int T;
	static int N;
	static int[][] map;
	static ArrayList<Node> list;
	static int result;
	static int[] dx = { 0, 0, -1, 1 };
	static int[] dy = { 1, -1, 0, 0 };

	public static void main(String[] args) {
		Scanner scan = new Scanner(System.in);
		map = new int[4001][4001];
		list = new ArrayList<Node>();

		T = scan.nextInt();
		for (int t = 0; t < T; t++) {
			list.clear();
			N = scan.nextInt();
			result = 0;

			for (int n = 0; n < N; n++) {
				int x = (scan.nextInt() * 2) + 2000;
				int y = (scan.nextInt() * 2) + 2000;
				int dir = scan.nextInt();
				int k = scan.nextInt();

				list.add(new Node(x, y, dir, k));
			}
			bfs();
			System.out.println("#" + (t + 1) + " " + result);
		}
	}

	static void bfs() {
		Queue<Node> q = new LinkedList<Node>();
		q.addAll(list);

		while (!q.isEmpty()) {
			Node node = q.poll();

			if (map[node.x][node.y] > 1) {
				result += node.k;
				map[node.x][node.y] = 0;
				continue;
			}

			int x = node.x + dx[node.dir];
			int y = node.y + dy[node.dir];
			map[node.x][node.y] = 0;

			if (x >= 0 && y >= 0 && x < 4001 && y < 4001) {
				map[x][y]++;
				if (map[x][y] > 1) {
					result += node.k;
				} else {
					q.add(new Node(x, y, node.dir, node.k));
				}
			}
		}
	}
}

class Node {
	int x;
	int y;
	int dir;
	int k;

	Node(int x, int y, int dir, int k) {
		this.x = x;
		this.y = y;
		this.dir = dir;
		this.k = k;
	}
}
