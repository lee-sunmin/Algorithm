2019 카카오 무지의 먹방라이브 효율성
진행 중

참고한 블로그 : http://ithub.tistory.com/34     <감사합니다>

=====================================================


public static int solution(int[] food_times, long k) {
		HashMap<Integer, Integer> map = new HashMap<Integer, Integer>();

		for (int i = 0; i < food_times.length; i++) {
			map.put(i, food_times[i]);
		}

//		Iterator<Integer> iteratorKey = map.keySet().iterator(); // value값 오름차순
//		// 정렬(기본)
//		while (iteratorKey.hasNext()) {
//			Integer value = iteratorKey.next();
//			System.out.println(value);// + "," + map.get(value));
//		}
		////////////////////////////////////////////////
		Iterator<Integer> it = sortByValue(map).iterator();
		int mapSize = map.size();

//		while (it.hasNext()) {
//			Integer temp = (Integer) it.next();
//			System.out.println(temp + " = " + map.get(temp));
//		}

		while (it.hasNext()) {
			Integer temp = (Integer) it.next();
			int a = map.get(temp) * mapSize;
			if (a < k) {
				map.remove(temp);
			}
			System.out.println(temp + " = " + map.get(temp));
		}

		long answer = -1;
		long sum = 0;

		if (food_times.length > k)
			return (int) k + 1;

		for (int i = 0; i < food_times.length; i++)
			sum += food_times[i];

		if (sum <= k)
			return -1;

		long size = food_times.length;
		int value = 0;
		for (int idx = (int) size; idx <= k;) {
			answer++;
			if (answer % size == 0) {
				value++;
				answer = 0;
			}
			if (food_times[(int) answer] > value) {
				idx++;
			}
		}

		while (food_times[(int) answer] < value) {
			answer++;
			if (answer % size == 0) {
				answer = 0;
				value++;
			}
		}

		if (answer == 0) {
			return 1;
		} else if (answer == size - 1) {
			return (int) size;
		}
		return (int) answer + 1;
	}

	public static List<Integer> sortByValue(final Map<Integer, Integer> map) {
		List<Integer> list = new ArrayList<Integer>();
		list.addAll(map.keySet());
		Collections.sort(list, new Comparator<Object>() {
			public int compare(Object o1, Object o2) {
				Object v1 = map.get(o1);
				Object v2 = map.get(o2);
				return ((Comparable) v2).compareTo(v1);
			}
		});
		Collections.reverse(list); // 주석시 오름차순
		return list;
	}
