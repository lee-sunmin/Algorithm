다이나믹 프로그래밍 기본.
기본 생각은 N을 1로 마드는 최소 연산의 횟수를 d[N] 이라고 생각하고,
1) N/3
2) N/2
3) N-1
위 세 단계로 쪼갠 뒤 각각에서 최소값을 구한다.
결국 d[N] = min(d[N/3],d[N/2],d[N-1]) 


===================

import java.util.Scanner;

public class Main {
	static int[] d = new int[1000001];

	public static void main(String[] args) {
		Scanner scan = new Scanner(System.in);

		int n = scan.nextInt();

		System.out.println(calc(n));

	}

	public static int calc(int n) {
		if (n == 1)
			return 0;

		// 값이 있다는 말
		if (d[n] > 0)
			return d[n];

		d[n] = calc(n - 1) + 1;
		if (n % 3 == 0) {
			int temp = calc(n / 3) + 1;
			if (d[n] > temp)
				d[n] = temp;
		}
		
		if (n % 2 == 0) {
			int temp = calc(n / 2) + 1;
			if (d[n] > temp)
				d[n] = temp;
		}

		return d[n];
	}

}
