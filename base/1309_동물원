다이나믹 프로그래밍 연습
3가지 케이스로 나눠서 생각하는게 참신했음.

예) 1번 - ㅁㅁ 중 왼쪽에만 존재
2번 - ㅁㅁ중 오른쪽에만 존재
================================

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class Main {

	static int mod = 9901;

	public static void main(String[] args) throws IOException {

		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		int n = Integer.parseInt(br.readLine());
		int[][] d = new int[n + 1][4];

		d[0][0] = 1;
		d[0][1] = 1;
		d[0][2] = 1;

		// run
		for (int i = 1; i < n; i++) {
			d[i][0] = (d[i - 1][0] + d[i - 1][1] + d[i - 1][2]) % mod;
			d[i][1] = (d[i - 1][0] + d[i - 1][2]) % mod;
			d[i][2] = (d[i - 1][0] + d[i - 1][1]) % mod;
		}

		int res = 0;
		for (int i = 0; i < 3; i++) {
			res = (res + d[n - 1][i]) % mod;
		}

		System.out.println(res);
	}

	public static void print(int[] arr) {
		for (int i = 1; i < arr.length; i++) {
			System.out.print(arr[i] + " ");
		}
	}
}
